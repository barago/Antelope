@using PagedList.Mvc;

@*@model IEnumerable<Antelope.Models.HSE.FicheSecurite>*@
@model PagedList.IPagedList<Antelope.Models.HSE.FicheSecurite>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/HSE/Shared/_Layout.cshtml";
}


<link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="/Scripts/jquery.dataTables.min.js"></script>

<script type="text/javascript" src="/Scripts/underscore.js"></script>
<script type="text/javascript" src="/Scripts/backbone.js"></script>

<script type="text/javascript" src="~/Scripts/Application/HSE/FicheSecurite/RechercheFicheSecuriteViewModel.js"></script>
<script type="text/javascript" src="~/Scripts/Application/HSE/FicheSecurite/RechercheFicheSecuriteParamModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/Socle/SiteModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/Socle/ZoneModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/Socle/LieuModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/Socle/ServiceModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/Socle/PosteDeTravailModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/Socle/ZoneTypeModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/Socle/LieuTypeModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/Socle/PosteDeTravailTypeModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/FicheSecuriteModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/FicheSecuriteTypeModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/PersonneConcerneeModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/PlageHoraireModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/ResponsableModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/RisqueModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/CorpsHumainZoneModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/DangerModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/QSE/ActionModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/QSE/CauseModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/RisqueModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/RisqueTypeModel.js"></script>  

<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/FicheSecuriteModel.js"></script>
<script type="text/javascript" src="/Scripts/Application/HSE/FicheSecurite/PersonneConcerneeModel.js"></script>




<script type="text/template" id="TableRecherche">


    <div class="row">

        <div class="col-md-12">

            <div class="panel panel-danger">
                <div class="panel-heading" style="background-color :#c42031; color: white">

                    <div class="row">

                        <div class="col-md-4">

                            Filtres

                        </div>
                        <div class="col-md-6">
                            <div class="col-md-3"> </div>
                            <div class="col-md-3">
                                <button id="RechercheBouton" type="submit" class="btn btn-default btn-xs pull-right">
                                    <span class="glyphicon glyphicon-search"></span> Mes fiches
                                </button>
                            </div>
                            <div class="col-md-3">
                                <button id="RechercheBouton" type="submit" class="btn btn-default btn-xs pull-right">
                                    <span class="glyphicon glyphicon-search"></span> Mes actions
                                </button>
                            </div>
                            <div class="col-md-3">
                                <button id="RechercheBouton" type="submit" class="btn btn-default btn-xs pull-right">
                                    <span class="glyphicon glyphicon-search"></span> Remise à zéro
                                </button>
                            </div>





                        </div>

                        <div class="col-md-2">

                            <button id="RechercheBouton" type="submit" class="btn btn-default btn-xs pull-right">
                                <span class="glyphicon glyphicon-search"></span> Chercher
                            </button>

                        </div>

                    </div>

                </div>
                <div class="panel-body" style="padding:0px;">

                    <div class="row input-sm">



                        <div class="col-md-4">
                            <div class="row">
                                <div class="col-sm-4">
                                    <label for="Site" class="label-xs">Site&nbsp;:</label>
                                </div>
                                <div class="col-sm-8">
                                    <select id="Site" class="form-control input-xs">
                                        <option value="0" <% if (rechercheFicheSecuriteParamModel.get('SiteId') == 0){ %> selected <% } %> ></option>
                                        <% siteCollection.each( function(site){ %>
                                        <option value="<%= site.get('SiteID') %>"
                                            <% if (rechercheFicheSecuriteParamModel.get('SiteId') == site.get('SiteID')){ %> selected <% } %> >
                                            <%= site.get('Nom') %>
                                        </option>
                                        <% }); %>
                                        @*%> selected <%*@
                                    </select>
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group">
                                    <label for="Zone" class="col-sm-4 label-xs">Zone&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <select class="form-control input-xs" id="Zone">
                                            <option value="0" <% if (rechercheFicheSecuriteParamModel.get('ZoneId') == 0){ %> selected <% } %> ></option>
                                            <% zoneCollection.each( function(zone){ %>
                                            <option value="<%= zone.get('ZoneID') %>"
                                                    <% if (rechercheFicheSecuriteParamModel.get('ZoneId') == zone.get('ZoneID')){ %> selected <% } %> >
                                                <%= zone.get('Nom') %>
                                            </option>
                                            <% }); %>

                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="Lieu" class="col-sm-4 label-xs">Lieu&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <select class="form-control input-xs" id="Lieu">
                                            <option value="0" <% if (rechercheFicheSecuriteParamModel.get('LieuId') == 0){ %> selected <% } %> ></option>
                                            <% lieuCollection.each( function(lieu){ %>
                                            <option value="<%= lieu.get('LieuID') %>"
                                                    <% if (rechercheFicheSecuriteParamModel.get('LieuId') == lieu.get('LieuID')){ %> selected <% } %> >
                                                <%= lieu.get('Nom') %>
                                            </option>
                                            <% }); %>

                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="PosteDeTravail" class="col-sm-4 label-xs">Poste&nbsp;de&nbsp;travail&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <select class="form-control input-xs" id="PosteDeTravail">
                                            <option value="0" <% if (rechercheFicheSecuriteParamModel.get('PosteDeTravailId') == 0){ %> selected <% } %> ></option>
                                            <% posteDeTravailCollection.each( function(posteDeTravail){ %>
                                            <option value="<%= posteDeTravail.get('PosteDeTravailId') %>"
                                                    <% if (rechercheFicheSecuriteParamModel.get('PosteDeTravailId') == posteDeTravail.get('PosteDeTravailId')){ %> selected <% } %> >
                                                <%= posteDeTravail.get('Nom') %>
                                            </option>
                                            <% }); %>

                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="Service" class="col-sm-4 label-xs">Service&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <select class="form-control input-xs" id="Service">
                                            <option value="0" <% if (rechercheFicheSecuriteParamModel.get('ServiceId') == 0){ %> selected <% } %> ></option>
                                            <% serviceCollection.each( function(service){ %>
                                            <option value="<%= service.get('ServiceID') %>"
                                                    <% if (rechercheFicheSecuriteParamModel.get('ServiceId') == service.get('ServiceID')){ %> selected <% } %> >
                                                <%= service.get('Nom') %>
                                            </option>
                                            <% }); %>

                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4">
                                    <label for="Code" class="label-xs">Code&nbsp;:</label>
                                </div>
                                <div class="col-sm-8">
                                    <input type="text" id="Code" class="form-control input-xs" value="<%= rechercheFicheSecuriteParamModel.get('Code') %>" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4">
                                    <label for="Age" class="label-xs">Age&nbsp;:</label>
                                </div>
                                <div class="col-sm-8">
                                    <input type="text" id="Age" class="form-control input-xs" value="<%= rechercheFicheSecuriteParamModel.get('Age') %>" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="row">
                                <div class="col-sm-4">
                                    <label for="Type" class="label-xs">Type&nbsp;:</label>
                                </div>
                                <div class="col-sm-8">
                                    <select id="Type" class="form-control input-xs">
                                        <option value="0" <% if (rechercheFicheSecuriteParamModel.get('FicheSecuriteTypeId') == 0){ %> selected <% } %> ></option>
                                        <% ficheSecuriteTypeCollection.each( function(type){ %>
                                        <option value="<%= type.get('FicheSecuriteTypeID') %>"
                                                <% if (rechercheFicheSecuriteParamModel.get('FicheSecuriteTypeId') == type.get('FicheSecuriteTypeID')){ %> selected <% } %> >
                                                <%= type.get('Nom') %>
                                            </option>
                                        <% }); %>

                                    </select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4">
                                    <label class="label-xs">Date&nbsp;Evnmt&nbsp;Début&nbsp;:</label>
                                </div>
                                <div class='col-sm-8'>
                                    @*<div class="form-group">*@
                                    <div class='input-group date' id='datetimepicker1'>
                                        <input type='text' name="DateEvenementDebut" id="DateEvenementDebut" class="form-control input-xs" value="<%= rechercheFicheSecuriteParamModel.get('DateEvenementDebut') %>" />
                                        <span class="input-group-addon input-xs">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                    @*</div>*@
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4">
                                    <label class="label-xs">Date&nbsp;Evnmt&nbsp;Fin&nbsp;:</label>
                                </div>
                                <div class='col-sm-8'>
                                    @*<div class="form-group">*@
                                    <div class='input-group date' id='datetimepicker2'>
                                        <input type='text' name="DateEvenementFin" id="DateEvenementFin" class="form-control input-xs" value="<%= rechercheFicheSecuriteParamModel.get('DateEvenementFin') %>" />
                                        <span class="input-group-addon input-xs">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                    @*</div>*@
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-sm-4">
                                        @*style="padding-right:0px;"*@
                                        <label for="PersonnesConcerneeNom" class="label-xs">Nom&nbsp;pers.&nbsp;concern.&nbsp;:&nbsp;&nbsp;</label>
                                    </div>
                                    <div class="col-sm-8">
                                        <div class="input-group input-group-xs">
                                            <input type="text" class="form-control input-xs" id="PersonnesConcerneeNom" value="<%= rechercheFicheSecuriteParamModel.get('PersonneConcerneeNom') %>">
                                            @*<span class="input-group-addon" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-user"></span></span>*@
                                            @*<span class="input-group-btn">
                                                <button id="ActiveDirectoryPersonneConcerneeRecherche" class=" btn btn-default" type="button" data-toggle="modal" @*data-target="#ActiveDirectoryUtilisateurModal">
                                                    <span class="glyphicon glyphicon-user">
                                                </button>
                                            </span>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-sm-4">
                                        @*style="padding-right:0px;"*@
                                        <label for="ResponsableNom" class="label-xs">Nom&nbsp;responsable&nbsp;:</label>
                                    </div>
                                    <div class="col-sm-8">
                                        <div class="input-group input-group-xs">
                                            <input type="text" class="form-control input-xs" id="ResponsableNom" value="<%= rechercheFicheSecuriteParamModel.get('ResponsableNom') %>">
                                            @*<span class="input-group-addon" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-user"></span></span>*@
                                            @*<span class="input-group-btn">
                            <button id="ActiveDirectoryPersonneConcerneeRecherche" class=" btn btn-default" type="button" data-toggle="modal" @*data-target="#ActiveDirectoryUtilisateurModal">
                                <span class="glyphicon glyphicon-user">
                            </button>
                        </span>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="PlageHoraire" class="col-sm-4 label-xs">Plage&nbsp;horaire&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <select class="form-control input-xs" id="PlageHoraire">
                                            <option value="0" <% if (rechercheFicheSecuriteParamModel.get('PlageHoraireId') == 0){ %> selected <% } %> ></option>
                                            <% plageHoraireCollection.each( function(plageHoraire){ %>
                                            <option value="<%= plageHoraire.get('PlageHoraireID') %>"
                                                <% if (rechercheFicheSecuriteParamModel.get('PlageHoraireId') == plageHoraire.get('PlageHoraireID')){ %> selected <% } %>
                                                >
                                                <%= plageHoraire.get('Nom') %>
                                            </option>
                                            <% }); %>

                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="Danger" class="col-sm-4 label-xs">Danger&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <select class="form-control input-xs" id="Danger">
                                            <option value="0" <% if (rechercheFicheSecuriteParamModel.get('DangerId') == 0){ %> selected <% } %> ></option>
                                            <% dangerCollection.each( function(danger){ %>
                                            <option value="<%= danger.get('DangerID') %>"
                                                    <% if (rechercheFicheSecuriteParamModel.get('DangerId') == danger.get('DangerID')){ %> selected <% } %> >
                                                <%= danger.get('Nom') %>
                                            </option>
                                            <% }); %>
                                        </select>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-4">
                            <div class="row">
                                <div class="form-group">
                                    <label for="Risque" class="col-sm-4 label-xs">Risque&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <select class="form-control input-xs" id="Risque">
                                            <option value="0" <% if (rechercheFicheSecuriteParamModel.get('RisqueId') == 0){ %> selected <% } %> ></option>
                                            <% risqueTypeCollection.each( function(risqueType){ %>
                                            <optgroup label="<%= risqueType.get('Nom') %>">
                                                @*La fonction Where renvoie un array et non pas une collection, on utilise donc _.each et non pas each de Backbone*@
                                                <% _.each(risqueCollection.where({'RisqueTypeId': risqueType.get('RisqueTypeId')}), function(risque){ %>
                                                <option value="<%= risque.get('RisqueId') %>"
                                                    <% if (rechercheFicheSecuriteParamModel.get('RisqueId') == risque.get('RisqueId')){ %> selected <% } %> >
                                                    <%= risque.get('Nom') %>
                                                <% }); %>
                                            </optgroup>
                                            <% }); %>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="Frequence" class="col-sm-4 label-xs">Fréquence&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-xs" id="Frequence" value="<%= rechercheFicheSecuriteParamModel.get('CotationFrequence') %>">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="Gravite" class="col-sm-4 label-xs">Gravité&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-xs" id="Gravite" value="<%= rechercheFicheSecuriteParamModel.get('CotationGravite') %>">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="CorpsHumainZone" class="col-sm-4 label-xs">Zone Corps Humain&nbsp;:</label>
                                    <div class="col-sm-8">
                                        <select class="form-control input-xs" id="CorpsHumainZone">
                                            <option value="0" <% if (rechercheFicheSecuriteParamModel.get('CorpsHumainZoneId') == 0){ %> selected <% } %> ></option>
                                            <% corpsHumainZoneCollection.each( function(corpsHumainZone){ %>
                                            <option value="<%= corpsHumainZone.get('Id') %>"
                                                    <% if (rechercheFicheSecuriteParamModel.get('CorpsHumainZoneId') == corpsHumainZone.get('Id')){ %> selected <% } %> >
                                                <%= corpsHumainZone.get('Nom') %>
                                            </option>
                                            <% }); %>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*<div class="col-md-3">
                            <div class="col-md-4">
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox"> FAS
                                    </label>
                                </div>
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox"> FPA
                                    </label>
                                </div>
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox"> AS
                                    </label>
                                </div>

                            </div>
                            <div class="col-md-8">
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox"> OA/NC
                                    </label>
                                </div>
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox"> Veille Régl.
                                    </label>
                                </div>
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox"> Référentiel
                                    </label>
                                </div>

                            </div>
                        </div>*@
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="row">

        <div class="col-md-12">

            <div class="panel panel-danger">
                <div class="panel-heading" style="background-color :#c42031; color: white">Résultats</div>
                <div class="panel-body">
                    <table class="table table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>
                                    @Html.ActionLink("Code", "Index", new { sortOrder = ViewBag.TriParametreCode })
                                </th>
                                <th>
                                    Nom
                                </th>
                                <th>
                                    Desciption
                                </th>
                                <th>
                                    Clôture
                                </th>
                                <th>
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <% ficheSecuriteCollection.each( function(ficheSecurite){ %>
                            <tr style="<%= 'background-color:' + ficheSecurite.get('color') + ';' %>">
                                <td>
                                    <%= ficheSecurite.get('FicheSecuriteID') %>
                                </td>
                                <td>
                                    <%= ficheSecurite.get('personneConcerneeModel').get('Nom') %>
                                </td>
                                <td>
                                    <%= ficheSecurite.get('Description') %>
                                </td>
                                <td>
                                    <%= ficheSecurite.get('WorkFlowAttenteASEValidation') %> <%= ficheSecurite.get('WorkFlowASEValidee') %>                                                    @* CLOTURE ? @Html.DisplayFor(modelItem => item.)*@
                                </td>
                                <td>
                                    <a class="glyphicon glyphicon-edit" href="<%= ficheSecurite.get('urlEdit')%>"></a> |                         @*@Url.Action("Edit", new { id = <% ficheSecurite.get('FicheSecuriteId')%> })*@
                                    <a class="glyphicon glyphicon-remove" @*href="@Url.Action("Delete", new { id = item.FicheSecuriteID })"*@></a>
                                </td>
                            </tr>
                            <%  });  %>
                        </tbody>
                    </table>
                    @*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

                    @* //// @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@

                    @*@Html.PagedListPager(Model, page => Url.Action("Index",
                                 new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }))*@



                </div>
            </div>
        </div>
    </div>



</script>

<div id="TableRechercheDiv">
</div>



<script type="text/javascript">


    $(document).ready(function () {


        var rechercheFicheSecuriteViewModel = new RechercheFicheSecuriteViewModel();

        rechercheFicheSecuriteViewModel.fetch({
            async: false   //, success: this.arraysToModelCollections
        });

        rechercheFicheSecuriteViewModel.set({ 'rechercheFicheSecuriteParamModel': new RechercheFicheSecuriteParamModel(rechercheFicheSecuriteViewModel.get('RechercheFicheSecuriteParamModel')) });

        rechercheFicheSecuriteViewModel.set({ 'siteCollection': new SiteCollection(rechercheFicheSecuriteViewModel.get('AllSite')) });
        rechercheFicheSecuriteViewModel.set({ 'zoneCollection': new ZoneCollection(rechercheFicheSecuriteViewModel.get('AllZone')) });
        rechercheFicheSecuriteViewModel.get('zoneCollection').each(function (zone, index) {
            zone.set({ 'Nom': zone.get('ZoneType').Nom });
        });
        rechercheFicheSecuriteViewModel.set({ 'lieuCollection': new LieuCollection(rechercheFicheSecuriteViewModel.get('AllLieu')) });
        rechercheFicheSecuriteViewModel.get('lieuCollection').each(function (lieu, index) {
            lieu.set({ 'Nom': lieu.get('LieuType').Nom });
        });
        rechercheFicheSecuriteViewModel.set({ 'serviceCollection': new ServiceCollection(rechercheFicheSecuriteViewModel.get('AllService')) });
        rechercheFicheSecuriteViewModel.get('serviceCollection').each(function (service, index) {
            service.set({ 'Nom': service.get('ServiceType').Nom });
        });
        rechercheFicheSecuriteViewModel.set({ 'posteDeTravailCollection': new PosteDeTravailCollection(rechercheFicheSecuriteViewModel.get('AllPosteDeTravail')) });
        rechercheFicheSecuriteViewModel.get('posteDeTravailCollection').each(function (posteDeTravail, index) {
            posteDeTravail.set({ 'Nom': posteDeTravail.get('PosteDeTravailType').Nom });
        });
        rechercheFicheSecuriteViewModel.set({ 'ficheSecuriteTypeCollection': new FicheSecuriteTypeCollection(rechercheFicheSecuriteViewModel.get('AllFicheSecuriteType')) });
        rechercheFicheSecuriteViewModel.set({ 'plageHoraireCollection': new PlageHoraireCollection(rechercheFicheSecuriteViewModel.get('AllPlageHoraire')) });
        rechercheFicheSecuriteViewModel.set({ 'dangerCollection': new DangerCollection(rechercheFicheSecuriteViewModel.get('AllDanger')) });
        rechercheFicheSecuriteViewModel.set({ 'corpsHumainZoneCollection': new CorpsHumainZoneCollection(rechercheFicheSecuriteViewModel.get('AllCorpsHumainZone')) });
        rechercheFicheSecuriteViewModel.set({ 'risqueCollection': new RisqueCollection(rechercheFicheSecuriteViewModel.get('AllRisque')) });
        rechercheFicheSecuriteViewModel.set({ 'risqueTypeCollection': new RisqueTypeCollection(rechercheFicheSecuriteViewModel.get('AllRisqueType')) });




        rechercheFicheSecuriteViewModel.set({ 'ficheSecuriteCollection': new FicheSecuriteCollection(rechercheFicheSecuriteViewModel.get('FicheSecuritePaginatedList').AllFicheSecurite) });

        rechercheFicheSecuriteViewModel.get('ficheSecuriteCollection').each(function (ficheSecurite, index) {
            ficheSecurite.set({ 'personneConcerneeModel': new PersonneConcerneeModel(ficheSecurite.PersonneConcernee) });

            //Création d'un ActionLink Razor MVC afin d'accéder à l'édition/suppression de la fiche (triche)
            var idValue = ficheSecurite.get('FicheSecuriteID');
            var urlEdit = '@Url.Action("Edit", new { id=-1 })';
            urlEdit = urlEdit.replace('-1', idValue);
            ficheSecurite.set({ 'urlEdit': urlEdit });

            colorWorkFlow(ficheSecurite);

        });

        //var boxIdValue = 233;
        //var link = '@*@Html.ActionLink("Detail", "Show", "Boxes", new{boxId=-1}, null)*@'
        //link = link.replace('-1', boxIdValue);
        //var result = title + '<br />' + link;

        //causeCollection.each(function (cause, index) {
        //    cause.set({ 'actionCollection': new ActionCollection(cause.get('Actions')) });
        //    cause.set({ 'actionModel': new ActionModel() });
        //    cause.get('actionCollection').each(function (action, index) {
        //        action.set({ 'Responsable': new ResponsableModel(action.get('Responsable')) });
        //        action.set({ 'DateButoireInitiale': dateFormatJS(action.get('DateButoireInitiale')) });
        //        action.set({ 'DateButoireNouvelle': dateFormatJS(action.get('DateButoireNouvelle')) });
        //    });
        //    cause.get('actionModel').set({ 'Responsable': new ResponsableModel() });
        //});

        function colorWorkFlow(ficheSecurite) {
            if (ficheSecurite.get('WorkFlowAttenteASEValidation') == true) {
                ficheSecurite.set({ 'color': 'orange' });
            }
            if (ficheSecurite.get('WorkFlowASERejetee') == true) {
                ficheSecurite.set({ 'color': 'red' });
            }
            if (ficheSecurite.get('WorkFlowASEValidee') == true) {
                ficheSecurite.set({ 'color': 'green' });
            }
            if (ficheSecurite.get('WorkFlowCloturee') == true) {
                ficheSecurite.set({ 'color': 'grey' });
            }
        };

        var RechercheTableView = Backbone.View.extend({

            id: 'RechercheTableFicheSecurite',
            template: _.template($('#TableRecherche').html()),
            render: function () {
                this.$el.html(this.template(this.model.toJSON()));

                //$('#table_id').DataTable({
                //    "ajax": {
                //        "url": "/api/FicheSecurite",
                //        "dataSrc": "tableData"
                //    },
                //    "columns": [
                //        { "data": "Code" },
                //        { "data": "Nom" },
                //        { "data": "Déscription" },
                //        { "data": "Clôture" },
                //    ]

                //});

                return this;
            },
            initialize: function () {
                _.bindAll(this, "paginatedListToCollection");
                this.render();
            },
            events: {
                "click #RechercheBouton": "recherche",
                "change #Site": "changeSite",
                "change #Zone": "changeZone",
                "change #Lieu": "changeLieu",
                "change #Service": "changeService",
                "change #PosteDeTravail": "changePosteDeTravail",
                "keyup #Age": "changeAge",
                "change #Type": "changeType",
                "keyup #Code": "changeCode",
                //changeDateEvenementDebut,
                //changeDateEvenementFin,
                "keyup #PersonnesConcerneeNom": "changePersonneConcerneeNom",
                "keyup #ResponsableNom": "changeResponsableNom",
                "change #PlageHoraire": "changePlageHoraire",
                "change #Danger": "changeDanger",
                "change #Risque": "changeRisque",
                "keyup #Gravite": "changeGravite",
                "keyup #Frequence": "changeFrequence",
                "change #CorpsHumainZone" : "changeCorpsHumainZone"


            },
            recherche: function () {
                //this.model.get('ficheSecuriteCollection').fetch({ data: { api_key: 'secretkey' }, type: 'POST' });
                this.model.get('ficheSecuriteCollection').fetch({ 
                    type: "post",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(this.model.get('rechercheFicheSecuriteParamModel')),
                    async: false,   //, success: this.arraysToModelCollections
                    wait: true,
                    success: this.paginatedListToCollection //this.paginatedListToCollection(response)
                });

                this.model.get('ficheSecuriteCollection').each(function (ficheSecurite, index) {
                    ficheSecurite.set({ 'personneConcerneeModel': new PersonneConcerneeModel(ficheSecurite.PersonneConcernee) });

                    //Création d'un ActionLink Razor MVC afin d'accéder à l'édition/suppression de la fiche (triche)
                    var idValue = ficheSecurite.get('FicheSecuriteID');
                    var urlEdit = '@Url.Action("Edit", new { id=-1 })';
                    urlEdit = urlEdit.replace('-1', idValue);
                    ficheSecurite.set({ 'urlEdit': urlEdit });

                });

                this.render();

            },
            paginatedListToCollection: function (model, response) {
                console.log(model);
                console.log(response);
                console.log(this.model);
                this.model.set({ 'ficheSecuriteCollection': new FicheSecuriteCollection(response.AllFicheSecurite) });
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'Page': response.Page });
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'PageSize': response.PageSize });
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'RowCount': response.RowCount });

                this.model.get('ficheSecuriteCollection').each(function (ficheSecurite, index) {
                   

                    //Création d'un ActionLink Razor MVC afin d'accéder à l'édition/suppression de la fiche (triche)
                    var idValue = ficheSecurite.get('FicheSecuriteID');
                    var urlEdit = '@Url.Action("Edit", new { id=-1 })';
                    urlEdit = urlEdit.replace('-1', idValue);
                    ficheSecurite.set({ 'urlEdit': urlEdit });

                    colorWorkFlow(ficheSecurite);

                });
            },
            changeSite: function () {
                // Lorsqu'on change le site, la liste des zones doit correspondre au site en question, on charge la liste des zones (REST/Ajax)

                this.model.get('rechercheFicheSecuriteParamModel').set({ 'SiteId': parseInt($('#Site').val()) });

                // Ajout de l'ID de l'URL, voir si il n'y a pas moyen de l'ajouter directement dans le fetch d'une collection Backbone ...
                this.model.get('zoneCollection').url = '/api/action/zone/getZonesBySiteId/' + this.model.get('rechercheFicheSecuriteParamModel').get('SiteId');

                // /!\ ASYNC : FALSE >>> Si true, la page se raffraichie sans attendre la mise à jour du model (anciennes données affichées)
                this.model.get('zoneCollection').fetch({ async: false });

                this.model.get('zoneCollection').each(function (zone, index) {
                    zone.set({ 'Nom': zone.get('ZoneType').Nom });
                });

                // Ajout de l'ID de l'URL, voir si il n'y a pas moyen de l'ajouter directement dans le fetch d'une collection Backbone ...
                this.model.get('serviceCollection').url = '/api/action/service/getServicesBySiteId/' + this.model.get('rechercheFicheSecuriteParamModel').get('SiteId');

                // /!\ ASYNC : FALSE >>> Si true, la page se raffraichie sans attendre la mise à jour du model (anciennes données affichées)
                this.model.get('serviceCollection').fetch({ async: false });

                this.model.get('serviceCollection').each(function (service, index) {
                    service.set({ 'Nom': service.get('ServiceType').Nom });
                });

                // TODO : Mettre à Zéro les lieux

                this.render();
            },
            changeZone: function () {
                // Lorsqu'on change la zone, la liste des lieux doit correspondre à la zone en question, on charge la liste des lieux (REST/Ajax)

                this.model.get('rechercheFicheSecuriteParamModel').set({ 'ZoneId': $('#Zone').val() });

                // Ajout de l'ID de l'URL, voir si il n'y a pas moyen de l'ajouter directement dans le fetch d'une collection Backbone ...
                this.model.get('lieuCollection').url = '/api/action/lieu/getLieuxByZoneId/' + this.model.get('rechercheFicheSecuriteParamModel').get('ZoneId');
                this.model.get('posteDeTravailCollection').url = '/api/action/posteDeTravail/getPosteDeTravailsByZoneId/' + this.model.get('rechercheFicheSecuriteParamModel').get('ZoneId');

                // /!\ ASYNC : FALSE >>> Si true, la page se raffraichie sans attendre la mise à jour du model (anciennes données affichées)
                this.model.get('lieuCollection').fetch({ async: false });
                this.model.get('posteDeTravailCollection').fetch({ async: false });

                this.model.get('lieuCollection').each(function (lieu, index) {
                    lieu.set({ 'Nom': lieu.get('LieuType').Nom });
                });
                this.model.get('posteDeTravailCollection').each(function (posteDeTravail, index) {
                    posteDeTravail.set({ 'Nom': posteDeTravail.get('PosteDeTravailType').Nom });
                });

                this.render();
            },
            changeLieu: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'LieuId': $('#Lieu').val() });
            },
            changeService: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'ServiceId': $('#Service').val() });
            },
            changePosteDeTravail: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'PosteDeTravailId': $('#PosteDeTravail').val() });
            },
            changeAge: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'Age': $('#Age').val() });
            },
            changeType: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'FicheSecuriteTypeId': $('#Type').val() });
            },
            changeCode: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'Code': $('#Code').val() });
            },
            changeDateEvenementDebut: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'DateEvenementDebut': this.dateFormatMVC($('#DateEvenementDebut').val()) + 'T00:00:00.0' });
            },
            changeDateEvenementFin: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'DateEvenementFin': this.dateFormatMVC($('#DateEvenementFin').val()) + 'T00:00:00.0' });
            },
            changePersonneConcerneeNom: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'PersonneConcerneeNom': $('#PersonnesConcerneeNom').val() });
            },
            changeResponsableNom: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'ResponsableNom': $('#ResponsableNom').val() });
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'ResponsableGuid': null });
            },
            changePlageHoraire: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'PlageHoraireId': $('#PlageHoraire').val() });
            },
            changeDanger: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'DangerId': $('#Danger').val() });
            },
            changeRisque: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'RisqueId': $('#Risque').val() });
            },
            changeGravite: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'CotationGravite': $('#Gravite').val() });
            },
            changeFrequence: function () {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'CotationFrequence': $('#Frequence').val() });
            },
            changeCorpsHumainZone: function (data) {
                this.model.get('rechercheFicheSecuriteParamModel').set({ 'CorpsHumainZoneId': $('#CorpsHumainZone').val() });
            },

        });

        var rechercheTableView = new RechercheTableView({
            el: $("#TableRechercheDiv"),
            model: rechercheFicheSecuriteViewModel
        });



    });


</script>


